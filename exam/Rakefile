task :default => [:compile]

task :quick do
  root = "master"
  compiler = "xelatex"
  options = "-interaction=nonstopmode"

  compileStr = "#{compiler} #{options} #{root}.tex"

  system(compileStr + " > output")

  task(:findErrors).invoke("output")
  task(:clean).invoke
end

task :compile do
  root = "master"
  compiler = "xelatex"
  options = "-interaction=nonstopmode"

  compileStr = "#{compiler} #{options} #{root}.tex"

  system(compileStr + " > /dev/null")
  system(compileStr + " > output")

  task(:findErrors).invoke("output")
  task(:clean).invoke
end

task :clean do
  rm = 'rm -rf'
  tmpAll = %w[aux log nav snm synctex.gz toc].map{|f| "*." + f}.join(' ')
  tmpFull = %w[output].join(' ')

  system("#{rm} #{tmpAll} #{tmpFull}") 
end

task :cleanall => :clean do
  system("rm -rf *.pdf")
end

task :findErrors, :file do |t, args|
  error = false 

  File.open(args[:file], 'r').each do |line|
    error = true if line.include?('!')
  end

  if error
    File.open(args[:file], 'r').each{|l| puts l}
    puts "---- ERROR COMPILING, CHECK ABOVE LOG ----"
  end
end
