type ConnectFour[] extends Game["Connect Four"] {
  define players = [
    ConnectPlayer[Crosses, Crosses],
    ConnectPlayer[Noughts, Noughts]
  ]
  define initialBoard = GridBoard[8, 8]
    .setSquaresAt[Bottom[],
                  [A1, B1, C1, D1, E1, F1, G1, H1]]
}
type ConnectPlayer[$pieceType, $name] extends Player[$name] {
  define winCondition[$gameState] =
    $gameState.findSquares[/friend (n friend)3  (e friend)3  (nw friend)3
                            (ne friend)3/].size != 0
  define tieCondition[$gameState] = $gameState.board.isFull
  define actions[$gameState] = addActions[$pieceType[/this/],
                                          $gameState.findSquares[/empty s !empty/]]
}
type Crosses[$owner] extends Piece[$owner]
type Noughts[$owner] extends Piece[$owner]
type Bottom[] extends Square[] {
  define isEmpty = false
}
