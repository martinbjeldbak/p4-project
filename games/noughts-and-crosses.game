type NacGame[] extends Game["Noughts and Crosses"] {
  define players = [NacPlayer[Crosses], NacPlayer[Noughts]]
  define board = GridBoard[3, 3]
}

type NacPlayer[$pieceType] extends Player[] {
  define winCondition[$gameState] =
    0 != size[findSquares[
      /friend (n friend n) | (e friend e) |
		(nw friend nw) | (ne friend ne ) friend/,
      $gameState]]
  define tieCondition[$gameState] =
    isFull[$gameState.board]
  define actions[$gameState] =
    addActions[$pieceType[this], $gameState.board.emptySquares]
}

type Crosses[$owner] = Piece[$owner] {
}

type Noughts[$owner] = Piece[$owner] {
}
