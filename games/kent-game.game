define allTrue[$list]
  0 == size[filter[$list, #[$bool] => $bool == false]]

type Solo is Player
type White is Piece {
  define actions[$this]
    union[
      findActions[$this, /this e|n empty/],
      findActions[$this, /this e Black e empty/],
      findActions[$this, /this n Black n empty/]
    ]
}
type Black is Piece {
  define actions[$this]
    union[
      findActions[$this, /this w|s empty/],
      findActions[$this, /this w White w empty/],
      findActions[$this, /this s White s empty/]
    ]
}
type KentBoard is Grid {
  define width[] 5
  define height[] 5
  define walls[] [C3, D1, D2, E1, E2, A4, A5, B4, B5]
  setup {
    Solo{
      White [A1, A2, A3, B1, B2, B3, C1, C2]
      Black [C4, C5, D3, D4, D5, E3, E4, E5]
    }
  }
}
game {
  title "Kents spil"
  players [Solo]
  board KentBoard
  define winCondition[$board]
    allTrue[
      map[
        [A1, A2, A3, B1, B2, B3, C1, C2],
        #[$square] => occupiedBy[$square, Black]
      ]
    ]
}
