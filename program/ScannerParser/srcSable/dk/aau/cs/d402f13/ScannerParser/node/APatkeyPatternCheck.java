/* This file was generated by SableCC (http://www.sablecc.org/). */

package dk.aau.cs.d402f13.ScannerParser.node;

import dk.aau.cs.d402f13.ScannerParser.analysis.*;

@SuppressWarnings("nls")
public final class APatkeyPatternCheck extends PPatternCheck
{
    private TPatternKeyword _patternKeyword_;

    public APatkeyPatternCheck()
    {
        // Constructor
    }

    public APatkeyPatternCheck(
        @SuppressWarnings("hiding") TPatternKeyword _patternKeyword_)
    {
        // Constructor
        setPatternKeyword(_patternKeyword_);

    }

    @Override
    public Object clone()
    {
        return new APatkeyPatternCheck(
            cloneNode(this._patternKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPatkeyPatternCheck(this);
    }

    public TPatternKeyword getPatternKeyword()
    {
        return this._patternKeyword_;
    }

    public void setPatternKeyword(TPatternKeyword node)
    {
        if(this._patternKeyword_ != null)
        {
            this._patternKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._patternKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._patternKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._patternKeyword_ == child)
        {
            this._patternKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._patternKeyword_ == oldChild)
        {
            setPatternKeyword((TPatternKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
